source("~/Documents/GitHub/Wood-Carbon/offline_figures/offline_figures.R", echo=TRUE)
source("~/Documents/GitHub/Wood-Carbon/offline_figures/offline_figures.R", echo=TRUE)
source("~/Documents/GitHub/Wood-Carbon/offline_figures/offline_figures.R", echo=TRUE)
source("~/Documents/GitHub/Wood-Carbon/offline_figures/offline_figures.R", echo=TRUE)
plotCountryData(countryFreq(data_study,countryRefData),"Roundwood (m3)")#
library(stringr)
source("~/Documents/GitHub/Wood-Carbon/offline_figures/offline_figures.R", echo=TRUE)
library(viridis)
source("~/Documents/GitHub/Wood-Carbon/offline_figures/offline_figures.R", echo=TRUE)
library(read_excel)
source("~/Documents/GitHub/Wood-Carbon/offline_figures/offline_figures.R", echo=TRUE)
source("~/Documents/GitHub/Wood-Carbon/offline_figures/offline_figures.R", echo=TRUE)
source("~/Documents/GitHub/Wood-Carbon/offline_figures/offline_figures.R", echo=TRUE)
## This script reads all raw data and creates R workspace that will be called by the application
WoodCarbonPath<-"/Users/valade/Documents/GitHub/Wood-Carbon/"
rawDataPath<-file.path(WoodCarbonPath,"rawData/")
rawDataPath
WoodCarbonPath<-"/Users/valade/Documents/GitHub/Wood-Carbon/"
rawDataPath<-file.path(WoodCarbonPath,"rawData/")
initDataPath<-file.path(WoodCarbonPath,"initData/")
wwwDataPath<-file.path(WoodCarbonPath,"www/")
#database.file <-paste0(rawDataPath,"/database_substitution_metaanalysis.v5.v6.QC7.init.xlsx")
database.file <-file.path(rawDataPath,"/database_substitution_metaanalysis.v5.v6.QC7.ALL.xlsx")
source("~/Documents/GitHub/Wood-Carbon/setup.R", echo=TRUE)
source("~/Documents/GitHub/Wood-Carbon/setup.R", echo=TRUE)
source("~/Documents/GitHub/Wood-Carbon/setup.R", echo=TRUE)
source("~/Documents/GitHub/Wood-Carbon/offline_figures/offline_figures.R", echo=TRUE)
shiny::runApp('~/Documents/GitHub/Wood-Carbon')
plotData.driverC<-plotDataFunc(data_expt_approachResults, c("Whole sector approach"),NULL,"driver1")
forestPlotDataFunc(plotData.driverC,"driver1",TRUE)
create_forest_plot(plotData.driverC,forestPlotData.driverC,TRUE)
plotData.driverC<-plotDataFunc(data_expt_approachResults, c("Whole sector approach"),NULL,"driver1")
forestPlotData.driverC<-forestPlotDataFunc(plotData.driverC,"driver1",TRUE)
create_forest_plot(plotData.driverC,forestPlotData.driverC,TRUE)
ggsave(paste0(offlineFiguresPath,"/fig5_forestPlot_driverC.png"),dpi=300,width=15,height=9)
source(file.path(WoodCarbonPath
,"functions.R"))
plotData.driverC<-plotDataFunc(data_expt_approachResults, c("Whole sector approach"),NULL,"driver1")
forestPlotData.driverC<-forestPlotDataFunc(plotData.driverC,"driver1",TRUE)
create_forest_plot(plotData.driverC,forestPlotData.driverC,TRUE)
ggsave(paste0(offlineFiguresPath,"/fig5_forestPlot_driverC.png"),dpi=300,width=15,height=9)
source(file.path(WoodCarbonPath
,"functions.R"))
plotData.driverC<-plotDataFunc(data_expt_approachResults, c("Whole sector approach"),NULL,"driver1")
forestPlotData.driverC<-forestPlotDataFunc(plotData.driverC,"driver1",TRUE)
create_forest_plot(plotData.driverC,forestPlotData.driverC,TRUE)
source(file.path(WoodCarbonPath ,"functions.R"))
plotData.driverC<-plotDataFunc(data_expt_approachResults, c("Whole sector approach"),NULL,"driver1")
forestPlotData.driverC<-forestPlotDataFunc(plotData.driverC,"driver1",TRUE)
create_forest_plot(plotData.driverC,forestPlotData.driverC,TRUE)
source(file.path(WoodCarbonPath ,"functions.R"))
plotData.driverC<-plotDataFunc(data_expt_approachResults, c("Whole sector approach"),NULL,"driver1")
forestPlotData.driverC<-forestPlotDataFunc(plotData.driverC,"driver1",driver1Cat)
create_forest_plot(plotData.driverC,forestPlotData.driverC,TRUE)
source(file.path(WoodCarbonPath ,"functions.R"))
plotData.driverC<-plotDataFunc(data_expt_approachResults, c("Whole sector approach"),NULL,"driver1")
forestPlotData.driverC<-forestPlotDataFunc(plotData.driverC,"driver1",driver1Cat)
create_forest_plot(plotData.driverC,forestPlotData.driverC,TRUE)
plotData.driverC<-plotDataFunc(data_expt_approachResults, c("Whole sector approach"),NULL,"driver1")
forestPlotData.driverC<-forestPlotDataFunc(plotData.driverC,"driver1","driver1Cat")
create_forest_plot(plotData.driverC,forestPlotData.driverC,TRUE)
source(file.path(WoodCarbonPath ,"functions.R"))
plotData.driverC<-plotDataFunc(data_expt_approachResults, c("Whole sector approach"),NULL,"driver1")
forestPlotData.driverC<-forestPlotDataFunc(plotData.driverC,"driver1","driver1Cat")
create_forest_plot(plotData.driverC,forestPlotData.driverC,TRUE)
ggplot(plotData,aes(x=split,y=substitution))+
geom_boxplot(data=plotData,aes(y=substitution ,x=reorder(split,substitution,mean,na.rm=TRUE)),outliers = FALSE,outlier.color=NULL,fatten = NULL,size=2,fill="lightgrey",color="lightgrey")+
stat_summary(fun=median, color="darkgrey", geom="point",  shape=15, size=3, show.legend=FALSE)
plotData<-plotData.driverC
ggplot(plotData,aes(x=split,y=substitution))+
geom_boxplot(data=plotData,aes(y=substitution ,x=reorder(split,substitution,mean,na.rm=TRUE)),outliers = FALSE,outlier.color=NULL,fatten = NULL,size=2,fill="lightgrey",color="lightgrey")+
stat_summary(fun=median, color="darkgrey", geom="point",  shape=15, size=3, show.legend=FALSE)
ggplot(plotData,aes(x=split,y=substitution))+
geom_boxplot(data=plotData,aes(y=substitution ,x=reorder(split,substitution,mean,na.rm=TRUE)),outliers = FALSE,outlier.color=NULL,fatten = NULL,size=2,fill="lightgrey",color="lightgrey")+
stat_summary(fun=median, color="darkgrey", geom="point",  shape=15, size=3, show.legend=FALSE) +
geom_point( data=forestPlotData) +
geom_errorbar( data=forestPlotData,aes(ymin = ci.lb, ymax = ci.ub),size=0.5,width=0.5) + #add CIs as error bars
theme_bw()+
theme(
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
text = element_text(size=16),
axis.text.x = element_text(angle = 45,hjust=1,vjust=1),
strip.placement = "outside",
strip.text.y.left = element_text(angle = 0)
#       axis.ticks = element_blank(),text = element_text(size=12),
#        axis.text.x = element_text(size=12,hjust=0.,vjust=0.5),
#        axis.text.y = element_text(size=12,hjust=0.,vjust=0.5)
)
plotData<-plotData.driverC
forestPlotData<-forestPlotData.driverC
ggplot(plotData,aes(x=split,y=substitution))+
geom_boxplot(data=plotData,aes(y=substitution ,x=reorder(split,substitution,mean,na.rm=TRUE)),outliers = FALSE,outlier.color=NULL,fatten = NULL,size=2,fill="lightgrey",color="lightgrey")+
stat_summary(fun=median, color="darkgrey", geom="point",  shape=15, size=3, show.legend=FALSE) +
geom_point( data=forestPlotData) +
geom_errorbar( data=forestPlotData,aes(ymin = ci.lb, ymax = ci.ub),size=0.5,width=0.5) + #add CIs as error bars
theme_bw()+
theme(
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
text = element_text(size=16),
axis.text.x = element_text(angle = 45,hjust=1,vjust=1),
strip.placement = "outside",
strip.text.y.left = element_text(angle = 0)
#       axis.ticks = element_blank(),text = element_text(size=12),
#        axis.text.x = element_text(size=12,hjust=0.,vjust=0.5),
#        axis.text.y = element_text(size=12,hjust=0.,vjust=0.5)
)+
labs(x="Carbon balance (tCO2/m3")+
geom_text(data=forestPlotData,
aes(label=paste0(round(substitution,2)," ( ",nStud,"|",nRec,signif," )" )),
y=2.1,
size=6,
nudge_x=0.2) +
# stat_n_text(
#   y.pos=-2.9,
#   size=6)+
geom_hline(yintercept=0)+
ylab("Carbon balance")+
xlab("")+
coord_flip(y = c(-6,6),clip="off")
forestPlotData
rint("Entering function : forestPlotDataFunc")
plotData$recordID<-rownames(plotData)
if(length(table(plotData[,split])[table(plotData[,split])!=0])>1){
mod.model <- rma.mv(yi = substitution,
V = sei,
slab = PaperID,
data = plotData,
random = ~ 1 | PaperID/recordID,
test = "t",
method = "REML",
mods = ~ split-1)
forestPlotData<-coef(summary((mod.model)))
forestPlotData$split<-substring(rownames(forestPlotData),6)
}else{
print("only one level")
mod.model <- rma.mv(yi = substitution,
V = sei,
slab = PaperID,
data = plotData,
random = ~ 1 | PaperID/recordID,
test = "t",
method = "REML")
forestPlotData<-coef(summary((mod.model)))
forestPlotData$split<-levels(plotData[,split])[table(plotData[,split])!=0]
}
plotData.driverC<-plotDataFunc(data_expt_approachResults, c("Whole sector approach"),NULL,"driver1")
plotData<-plotData.driverC
plotData$recordID<-rownames(plotData)
length(table(plotData[,split])[table(plotData[,split])!=0])
plotData[,split]
plotData
plotData[,split]
plotData
type(plotData)
class(plotData)
plotData[,split]
plotData[,get(split)]
typeof(plotData)
typeof(data.frame(plotData))
plotData.driverC<-plotDataFunc(data_expt_approachResults, c("Whole sector approach"),NULL,"driver1")
forestPlotData.driverC<-forestPlotDataFunc(plotData.driverC,"driver1","driver1Cat")
forestPlotData.driverC
plotDaat<-plotData.driverC
split<-"driver1"
split2<-"driver1Cat"
plotData<-plotData.driverC
typeof(plotData)
table(plotData[,split])
plotData[,split]
length(table(plotData[,split])[table(plotData[,split])!=0])
mod.model <- rma.mv(yi = substitution,
V = sei,
slab = PaperID,
data = plotData,
random = ~ 1 | PaperID/recordID,
test = "t",
method = "REML",
mods = ~ split-1)
plotData$recordID<-rownames(plotData)
mod.model <- rma.mv(yi = substitution,
V = sei,
slab = PaperID,
data = plotData,
random = ~ 1 | PaperID/recordID,
test = "t",
method = "REML",
mods = ~ split-1)
forestPlotData<-coef(summary((mod.model)))
forestPlotData$split<-substring(rownames(forestPlotData),6)
countStudySplit <- aggregate(substitution ~ split+split2, aggregate(substitution~PaperID+split+split2,plotData,mean), length)
colnames(countStudySplit)<-c("split","driver1Cat","nStud")
countRecordSplit <- aggregate(substitution ~  modelApproach+split+split2, plotData, length)
countStudySplit
colnames(countRecordSplit)<-c("modelApproach","split","driver1Cat","nRec")
forestPlotData<-merge(forestPlotData,unique(plotData[,c("split","driver1Cat")]),by="split",all.x=T)
forestPlotData
mod.model
countStudySplit <- aggregate(substitution ~ split+split2, aggregate(substitution~PaperID+split+split2,plotData,mean), length)
colnames(countStudySplit)<-c("split","split2","nStud")
countRecordSplit <- aggregate(substitution ~  modelApproach+split+split2, plotData, length)
colnames(countRecordSplit)<-c("modelApproach","split","split2","nRec")
forestPlotData<-merge(forestPlotData,unique(plotData[,c("split","split2")]),by="split",all.x=T)
forestPlotData<-forestPlotData[forestPlotData$split %in% levels(plotData$split) &
!(forestPlotData$split2)%in%c("Demand" ,"Environmental change" ),]
forestPlotData<-merge(forestPlotData,countRecordSplit[,c("nRec","split","split2")],by=c("split","split2"),all.x=TRUE)
forestPlotData<-merge(forestPlotData,countStudySplit[,c("nStud","split","split2")],by=c("split","split2"),all.x=TRUE)
forestPlotData
source(file.path(WoodCarbonPath ,"functions.R"))
plotData.driverC<-plotDataFunc(data_expt_approachResults, c("Whole sector approach"),NULL,"driver1")
forestPlotData.driverC<-forestPlotDataFunc(plotData.driverC,"driver1","driver1Cat")
create_forest_plot(plotData.driverC,forestPlotData.driverC,TRUE)
source("~/Documents/GitHub/Wood-Carbon/offline_figures/offline_figures.R", echo=TRUE)
source("~/Documents/GitHub/Wood-Carbon/setup.R", echo=TRUE)
runApp('~/Documents/GitHub/Wood-Carbon')
